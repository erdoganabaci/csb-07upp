{"version":3,"sources":["bell-ring.mp3","components/CountDown.jsx","App.js","index.js"],"names":["CountDown","useState","minutes","setMinutes","seconds","setSeconds","isActive","setIsActive","minuteRef","useRef","secondRef","useSound","bellRing","interrupt","play","useEffect","myInterval","setInterval","console","log","clearInterval","Typography","variant","gutterBottom","className","Button","size","color","onClick","type","placeholder","name","ref","onChange","minuteInputValue","current","value","Number","secondInputValue","Box","App","Grid","container","spacing","align","justify","direction","style","minHeight","item","Link","margin","href","event","preventDefault","rootElement","document","getElementById","ReactDOM","render"],"mappings":"qPAAe,MAA0B,sC,OC+K1BA,EAxKG,WAChB,MAA8BC,mBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAgCJ,oBAAS,GAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACMC,EAAYC,iBAAO,MACnBC,EAAYD,iBAAO,MACzB,EAAeE,YAASC,EAAU,CAAEC,WAAW,IAAxCC,EAAP,oBA8DA,OA1BAC,qBAAU,WACR,IAAIC,EAoBJ,OAnBKV,IACHU,EAAaC,aAAY,WACnBb,EAAU,GACZC,EAAWD,EAAU,GAEP,IAAZA,IACc,IAAZF,GAEFgB,QAAQC,IAAI,QACZL,IACAM,cAAcJ,KAEdb,EAAWD,EAAU,GAErBG,EAAW,QAGd,MAEE,WACLe,cAAcJ,MAEf,CAACF,EAAMR,EAAUJ,EAASE,IAG3B,gCACE,cAACiB,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,EAArC,8BAGa,IAAZrB,GAA6B,IAAZE,EAChB,gCACE,oBAAIoB,UAAU,OAAd,kBAUA,cAACC,EAAA,EAAD,CACEC,KAAM,QACNJ,QAAQ,WACRK,MAAM,YACNC,QAAS,WAGP,OAFAzB,EAAW,GACXI,GAAY,GACLF,EAAW,KAPtB,wBAcF,gCACE,sBAAKmB,UAAU,WAAf,UAgBE,uBACEK,KAAK,SACLC,YAAY,UACZC,KAAK,UACLC,IAAKxB,EACLyB,SAvGW,WACrB,IAAMC,EAAmB1B,EAAU2B,QAAQC,MACvCF,GAAoB,GACtB/B,EAAWkC,OAAOH,OAuGZ,uBACEL,KAAK,SACLC,YAAY,UACZC,KAAK,UACLC,IAAKtB,EACLuB,SAxGW,WACrB,IAAMK,EAAmB5B,EAAUyB,QAAQC,MAEvCE,EAAmB,GACrBjC,EAAWgC,OAAOC,OAsGZ,cAACb,EAAA,EAAD,CACEH,QAAQ,WACRK,MAAM,UACND,KAAM,QACNE,QAtGc,WACxB,IAAMM,EAAmB1B,EAAU2B,QAAQC,MACrCE,EAAmB5B,EAAUyB,QAAQC,MACvCF,GAAoB,GAAKI,GAAoB,IAC/CnC,EAAWkC,OAAOH,IAClB7B,EAAWgC,OAAOC,MA6FZ,oBASF,sBAAKd,UAAU,QAAf,UACG,IACAtB,EAFH,IAEaE,EAAU,GAAV,WAAmBA,GAAYA,KAE5C,eAACmC,EAAA,EAAD,WACE,cAACd,EAAA,EAAD,CACEH,QAAQ,WACRK,MAAM,UACND,KAAM,QACNE,QA7IG,WACbrB,GAAaD,IAwIL,SAMGA,EAAW,QAAU,SAExB,cAACmB,EAAA,EAAD,CACEC,KAAM,QACNJ,QAAQ,WACRK,MAAM,YACNC,QAjJgB,WAC1BrB,GAAY,GACZJ,EAAW,GACXE,EAAW,KA0IH,6B,gBC5JG,SAASmC,IACtB,OACE,eAACC,EAAA,EAAD,CACEC,WAAS,EACTC,QAAS,EACTC,MAAM,SACNC,QAAQ,SACRC,UAAU,SACVC,MAAO,CAAEC,UAAW,SANtB,UAQE,cAACP,EAAA,EAAD,CAAMQ,MAAI,EAAV,SACE,cAAC,EAAD,MAEF,cAACR,EAAA,EAAD,CAAMjB,UAAU,SAAhB,SACE,eAACH,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,EAArC,gCAEE,cAAC2B,EAAA,EAAD,CACEH,MAAO,CAAEI,OAAQ,KACjBC,KAAK,kCACLxB,QAAS,SAACyB,GAAD,OAAWA,EAAMC,kBAH5B,6BCfV,IAAMC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACnB,EAAD,MAEFe,K","file":"static/js/main.b8d154ad.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bell-ring.95d42481.mp3\";","import React from \"react\";\nimport { useState, useEffect, useRef } from \"react\";\nimport \"../../src/styles.css\";\nimport { Button, Box, Typography } from \"@material-ui/core\";\nimport useSound from \"use-sound\";\nimport bellRing from \"../bell-ring.mp3\";\n\nconst CountDown = () => {\n  const [minutes, setMinutes] = useState(0);\n  const [seconds, setSeconds] = useState(10);\n  const [isActive, setIsActive] = useState(true);\n  const minuteRef = useRef(null);\n  const secondRef = useRef(null);\n  const [play] = useSound(bellRing, { interrupt: true });\n\n  const toggle = () => {\n    setIsActive(!isActive);\n  };\n\n  const resetCountDownTimer = () => {\n    setIsActive(true);\n    setMinutes(0);\n    setSeconds(10);\n  };\n\n  const onChangeMinute = () => {\n    const minuteInputValue = minuteRef.current.value;\n    if (minuteInputValue >= 0) {\n      setMinutes(Number(minuteInputValue));\n    }\n  };\n\n  const onChangeSecond = () => {\n    const secondInputValue = secondRef.current.value;\n    // we use greater than zero otherwise when user give 0 always show done :(\n    if (secondInputValue > 0) {\n      setSeconds(Number(secondInputValue));\n    }\n  };\n\n  const setMinutesSeconds = () => {\n    const minuteInputValue = minuteRef.current.value;\n    const secondInputValue = secondRef.current.value;\n    if (minuteInputValue >= 0 && secondInputValue >= 0) {\n      setMinutes(Number(minuteInputValue));\n      setSeconds(Number(secondInputValue));\n    }\n  };\n\n  useEffect(() => {\n    let myInterval;\n    if (!isActive) {\n      myInterval = setInterval(() => {\n        if (seconds > 0) {\n          setSeconds(seconds - 1);\n        }\n        if (seconds === 0) {\n          if (minutes === 0) {\n            // Play After Done\n            console.log(\"Done\");\n            play();\n            clearInterval(myInterval);\n          } else {\n            setMinutes(minutes - 1);\n            // If seconds equal 00 we set 59 count down\n            setSeconds(59);\n          }\n        }\n      }, 1000);\n    }\n    return () => {\n      clearInterval(myInterval);\n    };\n  }, [play, isActive, minutes, seconds]);\n\n  return (\n    <div>\n      <Typography variant=\"h3\" gutterBottom>\n        Vibely CountDown\n      </Typography>\n      {minutes === 0 && seconds === 0 ? (\n        <div>\n          <h1 className=\"done\">Done</h1>\n          {/* <button\n            onClick={() => {\n              setMinutes(0);\n              setIsActive(true);\n              return setSeconds(10);\n            }}\n          >\n            Restart\n          </button> */}\n          <Button\n            size={\"small\"}\n            variant=\"outlined\"\n            color=\"secondary\"\n            onClick={() => {\n              setMinutes(0);\n              setIsActive(true);\n              return setSeconds(10);\n            }}\n          >\n            Restart\n          </Button>\n        </div>\n      ) : (\n        <div>\n          <div className=\"inputDiv\">\n            {/* <TextField\n              type=\"number\"\n              placeholder=\"Minutes\"\n              name=\"minutes\"\n              inputRef={minuteRef}\n              onChange={onChangeMinute}\n              label=\"Minutes\"\n            />\n            <TextField\n              type=\"number\"\n              name=\"seconds\"\n              inputRef={secondRef}\n              onChange={onChangeSecond}\n              label=\"Seconds\"\n            /> */}\n            <input\n              type=\"number\"\n              placeholder=\"Minutes\"\n              name=\"minutes\"\n              ref={minuteRef}\n              onChange={onChangeMinute}\n            />\n\n            <input\n              type=\"number\"\n              placeholder=\"Seconds\"\n              name=\"seconds\"\n              ref={secondRef}\n              onChange={onChangeSecond}\n            />\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              size={\"small\"}\n              onClick={setMinutesSeconds}\n            >\n              Set\n            </Button>\n          </div>\n          <div className=\"timer\">\n            {\" \"}\n            {minutes}:{seconds < 10 ? `0${seconds}` : seconds}\n          </div>\n          <Box>\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              size={\"small\"}\n              onClick={toggle}\n            >\n              {isActive ? \"Start\" : \"Stop\"}\n            </Button>\n            <Button\n              size={\"small\"}\n              variant=\"outlined\"\n              color=\"secondary\"\n              onClick={resetCountDownTimer}\n            >\n              Reset\n            </Button>\n          </Box>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CountDown;\n","import \"./styles.css\";\nimport CountDown from \"../src/components/CountDown\";\nimport { Grid, Typography, Link } from \"@material-ui/core\";\n\nexport default function App() {\n  return (\n    <Grid\n      container\n      spacing={0}\n      align=\"center\"\n      justify=\"center\"\n      direction=\"column\"\n      style={{ minHeight: \"100vh\" }}\n    >\n      <Grid item>\n        <CountDown />\n      </Grid>\n      <Grid className=\"footer\">\n        <Typography variant=\"h6\" gutterBottom>\n          Â©2021 Created by\n          <Link\n            style={{ margin: \"5\" }}\n            href=\"https://github.com/erdoganabaci\"\n            onClick={(event) => event.preventDefault()}\n          >\n            Erdogan\n          </Link>\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}